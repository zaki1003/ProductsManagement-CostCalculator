using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Data.SQLite;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ProductsCalculator
{
    public partial class MainWindow : Form
    {


        Calculator cal;
        Product prod;
        List<Product> products;

        //path of data base
        string path = "products.db";



        SQLiteConnection con = new SQLiteConnection("Data Source=products.db");

        SQLiteCommand cmd;
        SQLiteDataReader dr;
        DataTable ds = new DataTable();


        public MainWindow()
        {
            InitializeComponent();


            ds.Columns.Add("Id", typeof(int));
            ds.Columns.Add("Name", typeof(string));
            ds.Columns.Add("Store", typeof(string));
            ds.Columns.Add("Price", typeof(float));

        }

        private void btnManage_Click(object sender, EventArgs e)
        {
            var manageProducts = new ManageProducts();



            this.Hide();
            manageProducts.ShowDialog();
            this.Close();


        }

        private void data_show()
        {

            //    SQLiteConnection con = new SQLiteConnection(path);
            con.Open();




            string stm = "SELECT * FROM products";
            var cmd = new SQLiteCommand(stm, con);
            dr = cmd.ExecuteReader();



            while (dr.Read())
            {
ds.Rows.Add(new object[] { dr["id"], dr["name"], dr["store"], dr["price"] });
  dataGridView1.DataSource = ds;
}
            



        }

        private void MainWindow_Load(object sender, EventArgs e)
        {
            data_show();
         
            for (int i = 0; i < dataGridView1.Rows.Count - 1; i++) dataGridView1.Rows[i].Cells["selected"].Value=false;



        }

        private void btnCalculator_Click(object sender, EventArgs e)
        {
            cal = new Calculator();
            cal.products = new List<Product>();

            for (int i = 0; i < dataGridView1.Rows.Count - 1; i++)
            //if dgv is autogenerated then change the condition to i < dataGridView1.Rows.Count - 1

            {
             if (dataGridView1.Rows[i].Cells["selected"].Value.ToString().Trim() != "")
                if (bool.Parse(dataGridView1.Rows[i].Cells["selected"].Value.ToString()) == true)
                {
                    //print
                    /*    Console.WriteLine(dataGridView1.Rows[i].Cells["id"].Value.ToString() + " " +
                            dataGridView1.Rows[i].Cells["name"].Value.ToString() + " "+
                            dataGridView1.Rows[i].Cells["store"].Value.ToString());*/

                    prod = new Product(Convert.ToInt32(dataGridView1.Rows[i].Cells["id"].FormattedValue.ToString()),
                        dataGridView1.Rows[i].Cells["name"].Value.ToString(),
                        dataGridView1.Rows[i].Cells["store"].Value.ToString(),
                      Convert.ToDouble(dataGridView1.Rows[i].Cells["price"].FormattedValue.ToString()));

                    cal.products.Add(prod);


                    //clearing out the checked dgv after print...
                    //   dataGridView1.Rows.RemoveAt(i);
                    //  i--;
                }
            }
              




            
    
            Console.WriteLine("nombre des elements selectionné " + cal.products.Count);


        }
    }
}
